<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github on lyer's blog</title><link>/tags/github/</link><description>Recent content in github on lyer's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>icepan@aliyun.com (lyer)</managingEditor><webMaster>icepan@aliyun.com (lyer)</webMaster><lastBuildDate>Tue, 30 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>github上的docker镜像仓库</title><link>/2021/03/30/github%E4%B8%8A%E7%9A%84docker%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><author>icepan@aliyun.com (lyer)</author><guid>/2021/03/30/github%E4%B8%8A%E7%9A%84docker%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/</guid><description>github镜像仓库 github上提供两种镜像仓库服务:
基于仓库和项目的专有docker仓库，和项目仓库关联，只有删除仓库才可以删除image 基于个人账户的独立的docker仓库，和任何项目无关，完全独立 ghcr.io #账户仓库 ghcr.io/USERNAME/IMAGE_NAME:VERSION #打标签案例 docker.pkg.github.com #具体项目仓库 docker.pkg.github.com/USERNAME/REPO_NAME/IMAGE_NAME:VERSION #打标签案例 使用github镜像仓库之前需要进行登入，登入的用户名就是github的用户名，密码就是github上创建的TOKEN，注意需要赋予package权限
echo $GITHUB_DOCKER_IMAGE_TOKEN | docker login ghcr.io -u biningo --password-stdin ​
参考 GitHub 镜像仓库服务 Ghcr 快速上手教程
Container guides for GitHub Packages【官方文档】</description></item><item><title>github美化README</title><link>/2021/03/30/github%E4%B8%8A%E7%BE%8E%E5%8C%96readme/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><author>icepan@aliyun.com (lyer)</author><guid>/2021/03/30/github%E4%B8%8A%E7%BE%8E%E5%8C%96readme/</guid><description>收集一些有趣的东西 【给自己弄一个酷酷的Github主页】
https://blog.csdn.net/sinat_23133783/article/details/107643656
【关于wakatime的SpringBoot项目】
https://github.com/wf2311/wakatime-sync
【wakatime统计信息的action，展示在README上】
https://github.com/anmol098/waka-readme-stats
【展示自己github上统计信息的动态卡片到README】
https://github.com/anuraghazra/github-readme-stats
【为你的Github生成漂亮的徽章和进度条】
https://shikieiki.github.io/2017/03/01/为你的Github生成漂亮的徽章和进度条/
【GitHub新功能 建立你的GitHub个人页面】
https://dolorhunter.com/new-feature-build-your-github-profile-readme/
https://github.com/DolorHunter/DolorHunter
【图标库】
https://shields.io/#/
github-profile-readme</description></item><item><title>在github上搭建个人网站</title><link>/2021/02/15/%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><author>icepan@aliyun.com (lyer)</author><guid>/2021/02/15/%E5%9C%A8github%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</guid><description>使用github免费图床 github可以开一个仓库专门用于存放图片，然后图片就会产生一个链接，这样我们就可以使用这个图片了，这就是 github图床，并且不要钱呦！
我们这里使用的是： picgo+github 来实现命令行图片上传
1、安装picgo：https://github.com/PicGo/PicGo-Core
$ npm install picgo -g $ vim $HOME/.picgo/config.json #配置文件路径 2、配置config.json
{ picBed: { uploader: github, current: github, github: { repo: biningo/cdn, #github仓库地址 &amp;lt;username&amp;gt;/&amp;lt;repo&amp;gt; branch: master, #分支 token: dsadsadsada3231321321321, #访问token 需要github后台生成 path: img/, #仓库下的路径 } }, picgoPlugins: {} } 3、pic上传命令：
picgo u ~$PATH/aaaa.png #上传之后就会返回URL链接地址 ​
hugo静态博客 我采用的是 hugo+github page+github action 来实现自动化部署，我只需要在本地写完博客执行一下push发布上去即可实现部署，非常方便，具体可以参照我的仓库的action：https://github.com/biningo/biningo.github.io
因为push前需要先和github仓库rebase，命令比较多所以我写成一个脚本每次执行这个脚本即可，博客发布脚本：
#因为 hugo生成页面的actions会生成public页面，所以和本地不一样了，需要先rebase，然后再push才能push成功，每次push就会触发action生成页面 git fetch origin master git rebase origin/master git push</description></item></channel></rss>