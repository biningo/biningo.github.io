<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>位运算 - 标签 - lyer's blog</title><link>/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/</link><description>位运算 - 标签 - lyer's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>icepan@aliyun.com (lyer)</managingEditor><webMaster>icepan@aliyun.com (lyer)</webMaster><lastBuildDate>Wed, 31 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/" rel="self" type="application/rss+xml"/><item><title>位运算骚操作</title><link>/2021/03/31/%E4%BD%8D%E8%BF%90%E7%AE%97%E9%AA%9A%E6%93%8D%E4%BD%9C/</link><pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate><author>作者</author><guid>/2021/03/31/%E4%BD%8D%E8%BF%90%E7%AE%97%E9%AA%9A%E6%93%8D%E4%BD%9C/</guid><description><![CDATA[XOR 异或: 相同为0，不同为1
x^0=x x^(~x)=全1 #位数和x一样的全1 x^x=0 交换两个整数变量
a^=b b^=a a^=b 判断奇偶性
x&amp;1 == 1 #奇数 x&amp;1 == 0 #偶数 计算某个数字二进制位1的个数
int countOne(int num) { int cnt = 0; for (int i = 0; i &lt; 8 * sizeof(num); ++i) { cnt += num &amp; 1; num &gt;&gt;= 1; } return cnt; } 判断某一位是否为1
(n&gt;&gt;(pos-1))&amp;1 乘2除2
n&gt;&gt;1 #/2 n&lt;&lt;1 #*2 掩码操作，获取前面几位
mask=11110000 n=10100000 mask&amp;n #获取前面4位 其它位置0 将最低位的1置0
num &amp; (num - 1) 一个数组中其他数都出现了2次，只有一个数出现了1次，找出那个数]]></description></item></channel></rss>